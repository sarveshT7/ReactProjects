{"version":3,"sources":["components/Header.js","components/Footer.js","components/MovieSearch.js","components/MovieFilter.js","components/MovieCard.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","MovieSearch","getSearchText","style","color","type","name","placeholder","onChange","e","target","value","MovieFilter","genreList","activeGenre","selectGenre","map","genre","onClick","MovieCard","movie","index","useState","wished","setWished","styles","fontSize","src","title","alt","durationInMinutes","hours","hoursWithMinInDec","Math","floor","minutes","actualMin","round","timeConvert","duration","Home","setActiveGenre","movieList","filteredMovieList","setFilteredMovieList","searchedMovieList","setSearchedMovieList","filterTabClicked","setFilterTabClicked","length","movieCount","setMovieCount","URL","padding","useEffect","data","label","Axios","method","url","headers","Accept","then","response","console","log","catch","err","req","Request","body","mode","fetch","json","contents","getMovieCollection","searchValue","tempCollection","filter","toLowerCase","includes","genreSelected","i","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAUeA,EARA,WACX,OACI,mCACA,oBAAIC,UAAU,SAAd,8BCIOC,EAPA,WACX,OACI,wBAAQD,UAAU,Y,wCCgBXE,EAjBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAOlB,OACI,mCACA,sBAAKH,UAAU,+BAAf,UACA,qBAAKA,UAAU,aAAf,SAA4B,cAAC,IAAD,CAAiBI,MATlC,CACXC,MAAO,eASP,uBAAOL,UAAU,YAAYM,KAAK,SAASC,KAAK,SAASC,YAAY,YAAYC,SAPhE,SAACC,GAClBP,EAAcO,EAAEC,OAAOC,gBCQhBC,EAdK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAC1C,OACI,qCACA,mBAAGhB,UAAU,SAAb,qBAEA,oBAAIA,UAAU,oBAAd,SAEIc,EAAUG,KAAI,SAAAC,GAAK,OAAI,oBAAIlB,UAAWe,IAAgBG,EAAQ,SAAW,WAAwBC,QAAS,SAACT,GAAD,OAAKM,EAAYE,IAApG,SAA6GA,GAA1CA,YCwBvFE,EA9BG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAAW,EACNC,oBAAS,GADH,mBAC3BC,EAD2B,KACnBC,EADmB,KAE5BC,EAAQ,CACVrB,MAAM,UACNsB,SAAS,QAWb,OACI,sBAAiB3B,UAAU,OAA3B,UACI,qBAAK4B,IAAG,WAAMP,EAAMQ,MAAZ,SAA0BC,IAAKT,EAAMQ,QAC7C,sBAAK7B,UAAU,aAAf,UACI,mBAAGA,UAAU,QAAb,SAAsBqB,EAAMQ,QAC5B,oBAAG7B,UAAU,WAAb,UAbQ,SAAC+B,GACjB,IAAMC,EAASD,EAAoB,GAC7BE,EAAoBC,KAAKC,MAAMH,GAC/BI,EAAwC,IAA7BJ,EAAQC,GACnBI,EAAYH,KAAKI,MAAMF,GAC7B,MAAM,GAAN,OAAUH,EAAV,aAAgCI,EAAhC,OAQiCE,CAAYlB,EAAMmB,UAA3C,MAAyDnB,EAAMH,YAEnE,sBAAKlB,UAAU,QAAf,UACI,8CACCwB,EAAU,cAAC,IAAD,CAAapB,MAAOsB,EAAQ1B,UAAU,WAAWmB,QAAS,kBAAMM,GAAU,MAAc,cAAC,IAAD,CAAgBrB,MAAOsB,EAAQ1B,UAAU,WAAWmB,QAAS,kBAAMM,GAAU,WAR9KH,ICqIHmB,EAhJF,WAAO,IAAD,EACmBlB,mBAAS,CAAC,MAAO,SAAU,WAAY,SAAU,QAAS,UAAW,cADxF,mBACRT,EADQ,aAEuBS,mBAAST,EAAU,KAF1C,mBAERC,EAFQ,KAEK2B,EAFL,OAGmBnB,mBAAS,CACvC,CACI,MAAS,oBACT,SAAY,IACZ,MAAS,UAEb,CACI,MAAS,QACT,SAAY,IACZ,MAAS,SAEb,CACI,MAAS,yBACT,SAAY,IACZ,MAAS,UAEb,CACI,MAAS,2BACT,SAAY,IACZ,MAAS,aAEb,CACI,MAAS,UACT,SAAY,IACZ,MAAS,YAEb,CACI,MAAS,iBACT,SAAY,IACZ,MAAS,aAhCF,mBAGRoB,EAHQ,aAmCmCpB,mBAAS,KAnC5C,mBAmCRqB,EAnCQ,KAmCWC,EAnCX,OAoCmCtB,mBAAS,IApC5C,mBAoCRuB,EApCQ,KAoCWC,EApCX,OAqCiCxB,oBAAS,GArC1C,mBAqCRyB,EArCQ,KAqCUC,EArCV,OAsCqB1B,mBAASoB,EAAUO,QAtCxC,mBAsCRC,EAtCQ,KAsCIC,EAtCJ,KAwCTC,EAAM,sEAEN3B,EAAO,CACTrB,MAAO,QACPiD,QAAS,QAuCbC,qBAAU,YApCiB,WACvB,IAAMC,EAAO,CAAEC,MAAO,SAQtBC,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OAAKP,GACRQ,QAVY,CACZC,OAAQ,mBACR,+BAAgC,8EAChC,eAAgB,oBAQhBN,KAAMA,IAELO,MAAK,SAAAC,GAAQ,OAAEC,QAAQC,IAAIF,MAAWG,OAAM,SAAAC,GAAG,OAAGH,QAAQC,IAAIE,MAGnE,IAAIC,EAAM,IAAIC,QAAQjB,EAAK,CACvBM,OAAQ,OACRE,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBU,KAAMf,EACNgB,KAAM,YAGVC,MAAMJ,GACLN,MAAK,SAAAC,GAAQ,OAAIA,EAASU,UAC1BX,MAAK,SAACY,GACHV,QAAQC,IAAIS,MAEfR,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,mDAAoDE,MAKhFQ,KACF,IAEF,IAAMzE,EAAgB,SAAC0E,GAInB,GAHAhC,EAAqB,IACrBH,EAAe5B,EAAU,IACzBmC,GAAoB,GACF,IAAf4B,EAGC,OAFA9B,EAAqB,IACrBK,EAAcT,EAAUO,SACjB,EAEX,IAAM4B,EAAiBnC,EAAUoC,QAAO,SAAA1D,GAAK,OAAIA,EAAMQ,MAAMmD,cAAcC,SAASJ,MACpF9B,EAAqB,YAAI+B,IACzB1B,EAAc0B,EAAe5B,SAG3BlC,EAAc,SAACkE,GACjBxC,EAAewC,GACfnC,EAAqB,IACrB,IAAM+B,EAAiBI,IAAkBpE,EAAU,GAAK6B,EAAUoC,QAAO,SAAA1D,GAAK,OAAIA,EAAMH,MAAM8D,gBAAkBE,EAAcF,iBAAiBrC,EAC/IE,EAAqB,YAAIiC,IACzB7B,GAAoB,GACpBG,EAAc0B,EAAe5B,SAgCjC,OA3BQ,mCACA,sBAAKlD,UAAU,SAAf,UACA,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,CAAac,UAAWA,EAAWC,YAAaA,EAAaC,YAAaA,MAE9E,sBAAKhB,UAAU,YAAf,UACI,cAAC,EAAD,CAAaG,cAAeA,IAC5B,oBAAGC,MAAOsB,EAAV,UAAmByB,EAAnB,qBACA,qBAAKnD,UAAU,kBAAkBI,MAAO,CAACC,MAAO,SAAhD,SAEQuC,EAAkBM,OAAS,EACtBN,EAAkB3B,KAAI,SAACI,EAAM8D,GAAP,OAAa,8BAAa,cAAC,EAAD,CAAW9D,MAAOA,EAAOC,MAAO6D,KAAnCA,MAC5CnC,GAAiD,IAA7BJ,EAAkBM,OACvC,mEACCJ,EAAkBI,OAAS,EAC5BJ,EAAkB7B,KAAI,SAACI,EAAM8D,GAAP,OAAa,8BAAa,cAAC,EAAD,CAAW9D,MAAOA,EAAOC,MAAO6D,KAAnCA,MAE7CxC,EAAU1B,KAAI,SAACI,EAAM8D,GAAP,OAAa,8BAAa,cAAC,EAAD,CAAW9D,MAAOA,EAAOC,MAAO6D,KAAnCA,iBCtHnDC,EAZH,WACV,OACE,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACA,cAAC,EAAD,IACA,sBAAMrF,UAAU,OAAhB,SACA,cAAC,IAAD,CAAOsF,KAAK,IAAIC,UAAW9C,EAAM+C,OAAK,MAEtC,cAAC,EAAD,QCHWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de5f234a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return(\n        <>\n        <h1 className='header'>Movie Company</h1>\n        </>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Footer = () => {\n    return(\n        <footer className='footer'>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { AiOutlineSearch } from 'react-icons/ai'\n\nconst MovieSearch = ({getSearchText}) => {\n    const styles = {\n        color: '#c0ad85'\n    }\n    const handleChange = (e) => {\n        getSearchText(e.target.value)\n    }\n    return(\n        <>\n        <div className='searchContainer search-input'>\n        <div className='searchIcon'><AiOutlineSearch style={styles}/></div>\n        <input className='searchBox' type=\"search\" name=\"search\" placeholder=\"Search...\" onChange={handleChange}/>\n        </div>\n        </>\n    )\n}\n\nexport default MovieSearch","import React from 'react'\n\nconst MovieFilter = ({genreList, activeGenre, selectGenre}) => {\n    return(\n        <>\n        <p className='filter'>Filters</p>\n       \n        <ul className='movie-filter-list'>\n        {\n            genreList.map(genre => <li className={activeGenre === genre ? 'active' : 'inactive'} key={genre} onClick={(e)=>selectGenre(genre)}>{genre}</li>)\n        }\n        </ul>\n        </>\n    )\n}\n\nexport default MovieFilter","import React, { useState } from 'react'\nimport {AiOutlineHeart, AiFillHeart} from 'react-icons/ai'\n\nconst MovieCard = ({movie, index}) => {\n    const [wished, setWished] = useState(false)\n    const styles= {\n        color:'#b35a4e', \n        fontSize:'2rem'\n    }\n    \n    const timeConvert = (durationInMinutes) => {\n        const hours = (durationInMinutes / 60);\n        const hoursWithMinInDec = Math.floor(hours);\n        const minutes = (hours - hoursWithMinInDec) * 60;\n        const actualMin = Math.round(minutes);\n        return `${hoursWithMinInDec}h ${actualMin}min`;\n    }\n\n    return(\n        <div key={index} className='card'>\n            <img src={`/${movie.title}.jpeg`} alt={movie.title} />\n            <div className='movie-info'>\n                <p className='title'>{movie.title}</p>\n                <p className='duration'>{timeConvert(movie.duration)} / {movie.genre}</p>\n            </div>\n            <div className='watch'>\n                <a>watch trailer</a>\n                {wished ? (<AiFillHeart style={styles} className='wishlist' onClick={() => setWished(false)}/>) : (<AiOutlineHeart style={styles} className='wishlist' onClick={() => setWished(true)}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard","import React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\n\n//import components\nimport MovieSearch from '../components/MovieSearch'\nimport MovieFilter from '../components/MovieFilter'\nimport MovieCard from '../components/MovieCard'\n\nconst Home = () => {\n    const [genreList, setGenreList] = useState(['All', 'Comedy', 'Thriller', 'Horror', 'Drama', 'Fantasy', 'Animation'])\n    const [activeGenre, setActiveGenre] = useState(genreList[0])\n    const [movieList, setMovieList] = useState([\n        {\n            \"title\": \"Avengers: Endgame\",\n            \"duration\": 135,\n            \"genre\": \"Action\"\n        },\n        {\n            \"title\": \"After\",\n            \"duration\": 150,\n            \"genre\": \"Drama\"\n        },\n        {\n            \"title\": \"The Hole in the Ground\",\n            \"duration\": 125,\n            \"genre\": \"Horror\"\n        },\n        {\n            \"title\": \"Dragon: The hidden world\",\n            \"duration\": 185,\n            \"genre\": \"Animation\"\n        },\n        {\n            \"title\": \"Hellboy\",\n            \"duration\": 115,\n            \"genre\": \"Thriller\"\n        },\n        {\n            \"title\": \"A star is born\",\n            \"duration\": 135,\n            \"genre\": \"Fantasy\"\n        }\n    ])\n    const [filteredMovieList, setFilteredMovieList] = useState([])\n    const [searchedMovieList, setSearchedMovieList] = useState([])\n    const [filterTabClicked, setFilterTabClicked] = useState(false)\n    const [movieCount, setMovieCount] = useState(movieList.length)\n\n    const URL = 'https://us-east4-frapp-prod.cloudfunctions.net/dumdum-brand-details'\n\n    const styles={\n        color: '#ffff',\n        padding: '1% 0'\n    }\n\n    const getMovieCollection = () => {\n        const data = { label: 'movie' };\n        const headers = {\n            Accept: \"application/json\",\n            \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n            \"Content-Type\": \"application/json\",\n            // \"Access-Control-Allow-Methods\": \"GET, POST\",\n            // \"Access-Control-Allow-Origin\": \"*\",\n        };\n        Axios({\n            method: \"post\",\n            url: `${URL}`,\n            headers: headers,\n            data: data,\n            // mode: \"cors\"\n          }).then(response=>console.log(response)).catch(err=> console.log(err))\n\n\n        let req = new Request(URL, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: data,\n            mode: 'no-cors'\n        });\n\n        fetch(req)\n        .then(response => response.json())\n        .then((contents) => {\n            console.log(contents)\n        })\n        .catch((err) => console.log(\"Can’t access \" + \" response. Blocked by browser?\", err))\n    }\n\n    useEffect(()=> {\n        //CORS error hence used the api data in state\n        getMovieCollection()\n    },[])\n\n    const getSearchText = (searchValue) => {\n        setFilteredMovieList([])\n        setActiveGenre(genreList[0])\n        setFilterTabClicked(false)\n        if(searchValue == ''){\n            setSearchedMovieList([])\n            setMovieCount(movieList.length)\n            return true\n        }\n        const tempCollection = movieList.filter(movie => movie.title.toLowerCase().includes(searchValue))\n        setSearchedMovieList([...tempCollection])\n        setMovieCount(tempCollection.length)\n    }\n\n    const selectGenre = (genreSelected) => {\n        setActiveGenre(genreSelected)\n        setSearchedMovieList([])\n        const tempCollection = genreSelected !== genreList[0] ? movieList.filter(movie => movie.genre.toLowerCase() === genreSelected.toLowerCase()) : movieList\n        setFilteredMovieList([...tempCollection])\n        setFilterTabClicked(true)\n        setMovieCount(tempCollection.length)\n    }\n\n    const renderHomePage = () => {\n        return(\n            <>\n            <div className='app-ui'>\n            <div className=\"movie-filter\">\n                <MovieFilter genreList={genreList} activeGenre={activeGenre} selectGenre={selectGenre}/>\n            </div>\n            <div className=\"move-list\">\n                <MovieSearch getSearchText={getSearchText}/>\n                <p style={styles}>{movieCount} movie(s) found</p>\n                <div className='movie-card-grid' style={{color: '#ffff'}}>\n                {(() => {\n                    if (filteredMovieList.length > 0){\n                      return filteredMovieList.map((movie,i) => <div key={i}><MovieCard movie={movie} index={i}/></div>)\n                    }else if (filterTabClicked && filteredMovieList.length === 0) {\n                      return <h1>No movie found for selected genre</h1>\n                    }else if (searchedMovieList.length > 0){\n                      return searchedMovieList.map((movie,i) => <div key={i}><MovieCard movie={movie} index={i}/></div>)\n                    }else{\n                      return movieList.map((movie,i) => <div key={i}><MovieCard movie={movie} index={i}/></div>)\n                    }\n                })()}\n                </div>\n            </div>  \n            </div>\n            </>\n        )\n    }\n\n    return renderHomePage()\n    \n}\n\nexport default Home","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n// import { Container } from 'react-bootstrap'\nimport Home from './pages/Home'\n// import ProductList from './pages/ProductList'\n\nconst App = () => {\n  return (\n    <Router basename=\"/\">\n    <Header/>\n    <main className=\"py-3\">\n    <Route path='/' component={Home} exact/>\n    </main>\n    <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}